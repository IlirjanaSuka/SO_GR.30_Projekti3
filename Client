#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

#define SERVER_IP "127.0.0.1"
#define PORT 50033
#define BUFFER_SIZE 1024

int main() {
    int clientSocket;
    struct sockaddr_in serverAddress;
    char buffer[BUFFER_SIZE];
    
 clientSocket = socket(AF_INET, SOCK_STREAM, 0);

    if (clientSocket == -1) {
        perror("Krijimi i soketës dështoi");
        exit(EXIT_FAILURE);

    }

    serverAddress.sin_family = AF_INET;
    serverAddress.sin_port = htons(PORT);


    if (inet_pton(AF_INET, SERVER_IP, &(serverAddress.sin_addr)) <= 0) {
        perror("Adresë e pavlefshme / Adresa nuk mbështetet");
        exit(EXIT_FAILURE);

    }
    if (connect(clientSocket, (struct sockaddr*)&serverAddress, sizeof(serverAddress)) == -1) {
        perror("Lidhja dështoi");
        exit(EXIT_FAILURE);

    }
 while (1) {

        printf("Shkruani një kërkesë (ose 'exit' për të dalë): ");

        fgets(buffer, BUFFER_SIZE, stdin);

        buffer[strcspn(buffer, "\n")] = '\0';

        if (send(clientSocket, buffer, strlen(buffer), 0) == -1) {

            perror("Dërgimi dështoi");

            exit(EXIT_FAILURE);

        }

        if (strcmp(buffer, "exit") == 0) {
            break;

        }

        int bytesRead = recv(clientSocket, buffer, BUFFER_SIZE, 0);

        if (bytesRead == -1) {

            perror("Marrja dështoi");
            exit(EXIT_FAILURE);

        }

        buffer[bytesRead] = '\0';
        printf("Përgjigje nga serveri: %s\n", buffer);

    }

    close(clientSocket);
    return 0;

}
